name: FlashCardBot Workflow

on: [push]

jobs:
  unit-testing:

    runs-on: self-hosted
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install TelegramBot API package from Github repository
      run: |
        pip install git+https://github.com/ocriado91/python-telegrambot --force-reinstall
    - name: Lint with ruff
      run: |
        ruff check .
    - name: Test with pytest and codecov
      run: |
        export PYTHONPATH=src/
        coverage run -m pytest -v
        coverage xml
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos

  deployment:
    runs-on: self-hosted
    steps:
      - name: Run docker container into Raspberry Pi
        run: |
          # Create a configuration file from template
          cp config/template.toml secrets/config.toml
          # Replace TelegramBot API Key with variable through Github Actions
          sed -i "s|<YOUR_API_KEY>|${{ secrets.TELEGRAMBOT_API_KEY }}|g" secrets/config.toml
          # Export DOCKER_HOST variable
          DOCKER_HOST=ssh://rpimon@rpi-mon-server
          # Stop and remove previous docker container
          docker stop flashcardbot
          docker container rm flashcardbot
          # Build docker image into Raspberry Pi
          docker build -t flashcardbot .
          # Run docker container into Raspberry Pi
          docker run --name flashcardbot -d flashcardbot python3 src/flashcard.py secrets/config.toml